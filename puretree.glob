DIGEST 271054326dd6c3a4eca3c32923516fcb
Ftmpl.puretree
R15:31 Coq.ZArith.ZArith <> <> lib
R49:65 Coq.micromega.Lia <> <> lib
R83:96 Coq.Lists.List <> <> lib
R106:118 Coq.Lists.List ListNotations <> mod
ind 335:340 <> number
constr 355:368 <> Finite_Integer
constr 381:392 <> Neg_Infinity
constr 397:408 <> Pos_Infinity
R375:375 Coq.Numbers.BinNums <> Z ind
binder 371:371 <> n:3
scheme 335:340 <> number_rect
scheme 335:340 <> number_ind
scheme 335:340 <> number_rec
scheme 335:340 <> number_sind
def 423:432 <> min_number
binder 434:434 <> a:4
binder 436:436 <> b:5
R440:445 tmpl.puretree <> number ind
R457:457 tmpl.puretree <> a:4 var
R467:480 tmpl.puretree <> Finite_Integer constr
R494:494 tmpl.puretree <> b:5 var
R545:558 tmpl.puretree <> Finite_Integer constr
R566:579 tmpl.puretree <> Finite_Integer constr
R582:586 Coq.ZArith.BinInt Z min def
R639:650 tmpl.puretree <> Neg_Infinity constr
R655:655 tmpl.puretree <> b:5 var
R701:712 tmpl.puretree <> Pos_Infinity constr
R717:717 tmpl.puretree <> a:4 var
R768:779 tmpl.puretree <> Neg_Infinity constr
R784:784 tmpl.puretree <> a:4 var
R789:800 tmpl.puretree <> Pos_Infinity constr
R805:805 tmpl.puretree <> b:5 var
def 825:834 <> max_number
binder 836:836 <> a:8
binder 838:838 <> b:9
R842:847 tmpl.puretree <> number ind
R859:859 tmpl.puretree <> a:8 var
R869:882 tmpl.puretree <> Finite_Integer constr
R896:896 tmpl.puretree <> b:9 var
R947:960 tmpl.puretree <> Finite_Integer constr
R968:981 tmpl.puretree <> Finite_Integer constr
R984:988 Coq.ZArith.BinInt Z max def
R1041:1052 tmpl.puretree <> Neg_Infinity constr
R1057:1057 tmpl.puretree <> a:8 var
R1103:1114 tmpl.puretree <> Pos_Infinity constr
R1119:1119 tmpl.puretree <> b:9 var
R1170:1181 tmpl.puretree <> Neg_Infinity constr
R1186:1186 tmpl.puretree <> b:9 var
R1191:1202 tmpl.puretree <> Pos_Infinity constr
R1207:1207 tmpl.puretree <> a:8 var
prf 1222:1235 <> min_min_number
binder 1245:1245 <> a:12
binder 1247:1247 <> b:13
R1279:1281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1250:1259 tmpl.puretree <> min_number def
R1261:1261 tmpl.puretree <> a:12 var
R1264:1273 tmpl.puretree <> min_number def
R1275:1275 tmpl.puretree <> a:12 var
R1277:1277 tmpl.puretree <> b:13 var
R1282:1291 tmpl.puretree <> min_number def
R1293:1293 tmpl.puretree <> a:12 var
R1295:1295 tmpl.puretree <> b:13 var
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1349:1356 Coq.ZArith.BinInt Z min_id thm
R1386:1394 Coq.ZArith.BinInt Z min_dec thm
R1426:1433 Coq.ZArith.BinInt Z min_id thm
R1386:1394 Coq.ZArith.BinInt Z min_dec thm
R1426:1433 Coq.ZArith.BinInt Z min_id thm
R1426:1433 Coq.ZArith.BinInt Z min_id thm
R1426:1433 Coq.ZArith.BinInt Z min_id thm
prf 1454:1467 <> max_max_number
binder 1477:1477 <> a:14
binder 1479:1479 <> b:15
R1511:1513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1482:1491 tmpl.puretree <> max_number def
R1493:1493 tmpl.puretree <> a:14 var
R1496:1505 tmpl.puretree <> max_number def
R1507:1507 tmpl.puretree <> a:14 var
R1509:1509 tmpl.puretree <> b:15 var
R1514:1523 tmpl.puretree <> max_number def
R1525:1525 tmpl.puretree <> a:14 var
R1527:1527 tmpl.puretree <> b:15 var
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1581:1588 Coq.ZArith.BinInt Z max_id thm
R1618:1626 Coq.ZArith.BinInt Z max_dec thm
R1658:1665 Coq.ZArith.BinInt Z max_id thm
R1618:1626 Coq.ZArith.BinInt Z max_dec thm
R1658:1665 Coq.ZArith.BinInt Z max_id thm
R1658:1665 Coq.ZArith.BinInt Z max_id thm
R1658:1665 Coq.ZArith.BinInt Z max_id thm
prf 1686:1700 <> min_number_comm
binder 1711:1711 <> a:16
binder 1713:1713 <> b:17
R1730:1732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1716:1725 tmpl.puretree <> min_number def
R1727:1727 tmpl.puretree <> a:16 var
R1729:1729 tmpl.puretree <> b:17 var
R1733:1742 tmpl.puretree <> min_number def
R1744:1744 tmpl.puretree <> b:17 var
R1746:1746 tmpl.puretree <> a:16 var
R1796:1805 Coq.ZArith.BinInt Z min_comm thm
R1796:1805 Coq.ZArith.BinInt Z min_comm thm
R1796:1805 Coq.ZArith.BinInt Z min_comm thm
prf 1826:1840 <> max_number_comm
binder 1851:1851 <> a:18
binder 1853:1853 <> b:19
R1870:1872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1856:1865 tmpl.puretree <> max_number def
R1867:1867 tmpl.puretree <> a:18 var
R1869:1869 tmpl.puretree <> b:19 var
R1873:1882 tmpl.puretree <> max_number def
R1884:1884 tmpl.puretree <> b:19 var
R1886:1886 tmpl.puretree <> a:18 var
R1936:1945 Coq.ZArith.BinInt Z max_comm thm
R1936:1945 Coq.ZArith.BinInt Z max_comm thm
R1936:1945 Coq.ZArith.BinInt Z max_comm thm
prf 1966:1981 <> min_number_assoc
binder 1992:1992 <> a:20
binder 1994:1994 <> b:21
binder 1996:1996 <> c:22
R2028:2030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1999:2008 tmpl.puretree <> min_number def
R2010:2010 tmpl.puretree <> a:20 var
R2013:2022 tmpl.puretree <> min_number def
R2024:2024 tmpl.puretree <> b:21 var
R2026:2026 tmpl.puretree <> c:22 var
R2031:2040 tmpl.puretree <> min_number def
R2043:2052 tmpl.puretree <> min_number def
R2054:2054 tmpl.puretree <> a:20 var
R2056:2056 tmpl.puretree <> b:21 var
R2059:2059 tmpl.puretree <> c:22 var
R2112:2122 Coq.ZArith.BinInt Z min_assoc thm
R2112:2122 Coq.ZArith.BinInt Z min_assoc thm
R2112:2122 Coq.ZArith.BinInt Z min_assoc thm
prf 2150:2165 <> max_number_assoc
binder 2176:2176 <> a:23
binder 2178:2178 <> b:24
binder 2180:2180 <> c:25
R2212:2214 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2183:2192 tmpl.puretree <> max_number def
R2194:2194 tmpl.puretree <> a:23 var
R2197:2206 tmpl.puretree <> max_number def
R2208:2208 tmpl.puretree <> b:24 var
R2210:2210 tmpl.puretree <> c:25 var
R2215:2224 tmpl.puretree <> max_number def
R2227:2236 tmpl.puretree <> max_number def
R2238:2238 tmpl.puretree <> a:23 var
R2240:2240 tmpl.puretree <> b:24 var
R2243:2243 tmpl.puretree <> c:25 var
R2296:2306 Coq.ZArith.BinInt Z max_assoc thm
R2296:2306 Coq.ZArith.BinInt Z max_assoc thm
R2296:2306 Coq.ZArith.BinInt Z max_assoc thm
def 2339:2353 <> less_than_equal
binder 2355:2355 <> a:26
binder 2357:2357 <> b:27
R2360:2363 Coq.Init.Datatypes <> bool ind
R2378:2378 tmpl.puretree <> a:26 var
R2388:2401 tmpl.puretree <> Finite_Integer constr
R2415:2415 tmpl.puretree <> b:27 var
R2466:2479 tmpl.puretree <> Finite_Integer constr
R2490:2494 Coq.ZArith.BinInt <> ::Z_scope:x_'<=?'_x not
R2543:2554 tmpl.puretree <> Neg_Infinity constr
R2559:2563 Coq.Init.Datatypes <> false constr
R2609:2620 tmpl.puretree <> Pos_Infinity constr
R2625:2628 Coq.Init.Datatypes <> true constr
R2679:2690 tmpl.puretree <> Neg_Infinity constr
R2695:2698 Coq.Init.Datatypes <> true constr
R2703:2714 tmpl.puretree <> Pos_Infinity constr
R2725:2725 tmpl.puretree <> b:27 var
R2768:2779 tmpl.puretree <> Pos_Infinity constr
R2784:2787 Coq.Init.Datatypes <> true constr
R2830:2834 Coq.Init.Datatypes <> false constr
def 2892:2900 <> less_than
binder 2902:2902 <> a:31
binder 2904:2904 <> b:32
R2907:2910 Coq.Init.Datatypes <> bool ind
R2925:2925 tmpl.puretree <> a:31 var
R2935:2948 tmpl.puretree <> Finite_Integer constr
R2962:2962 tmpl.puretree <> b:32 var
R3013:3026 tmpl.puretree <> Finite_Integer constr
R3037:3040 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R3089:3100 tmpl.puretree <> Neg_Infinity constr
R3105:3109 Coq.Init.Datatypes <> false constr
R3155:3166 tmpl.puretree <> Pos_Infinity constr
R3171:3174 Coq.Init.Datatypes <> true constr
R3225:3236 tmpl.puretree <> Neg_Infinity constr
R3247:3247 tmpl.puretree <> b:32 var
R3298:3309 tmpl.puretree <> Neg_Infinity constr
R3314:3318 Coq.Init.Datatypes <> false constr
R3369:3372 Coq.Init.Datatypes <> true constr
R3423:3434 tmpl.puretree <> Pos_Infinity constr
R3439:3443 Coq.Init.Datatypes <> false constr
R3461:3469 tmpl.puretree <> less_than def
R3502:3516 tmpl.puretree <> less_than_equal def
def 3551:3555 <> range
R3567:3569 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3561:3566 tmpl.puretree <> number ind
R3570:3575 tmpl.puretree <> number ind
def 3596:3605 <> range_incl
R3616:3620 tmpl.puretree <> range def
binder 3608:3609 <> r1:36
binder 3611:3612 <> r2:37
R3625:3628 Coq.Init.Datatypes <> bool ind
R3645:3646 tmpl.puretree <> r2:37 var
R3641:3642 tmpl.puretree <> r1:36 var
R3653:3653 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3656:3656 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3659:3659 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3662:3662 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3665:3665 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3668:3668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3694:3697 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R3673:3687 tmpl.puretree <> less_than_equal def
R3698:3712 tmpl.puretree <> less_than_equal def
def 3737:3748 <> key_in_range
R3755:3755 Coq.Numbers.BinNums <> Z ind
binder 3751:3751 <> k:40
R3763:3767 tmpl.puretree <> range def
binder 3759:3759 <> r:41
R3772:3775 Coq.Init.Datatypes <> bool ind
R3787:3787 tmpl.puretree <> r:41 var
R3794:3794 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3797:3798 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3801:3801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3837:3840 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R3806:3814 tmpl.puretree <> less_than def
R3820:3833 tmpl.puretree <> Finite_Integer constr
R3835:3835 tmpl.puretree <> k:40 var
R3841:3849 tmpl.puretree <> less_than def
R3852:3865 tmpl.puretree <> Finite_Integer constr
R3867:3867 tmpl.puretree <> k:40 var
def 3891:3901 <> merge_range
R3910:3914 tmpl.puretree <> range def
binder 3904:3904 <> a:43
binder 3906:3906 <> b:44
R3919:3923 tmpl.puretree <> range def
R3939:3939 tmpl.puretree <> b:44 var
R3936:3936 tmpl.puretree <> a:43 var
R3946:3946 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3949:3949 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3952:3952 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3955:3955 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3958:3959 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3962:3962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3967:3967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3984:3985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4002:4002 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3968:3977 tmpl.puretree <> min_number def
R3986:3995 tmpl.puretree <> max_number def
prf 4016:4026 <> merge_assoc
binder 4036:4036 <> a:47
binder 4038:4038 <> b:48
binder 4040:4040 <> c:49
R4074:4076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4043:4053 tmpl.puretree <> merge_range def
R4056:4066 tmpl.puretree <> merge_range def
R4068:4068 tmpl.puretree <> a:47 var
R4070:4070 tmpl.puretree <> b:48 var
R4073:4073 tmpl.puretree <> c:49 var
R4077:4087 tmpl.puretree <> merge_range def
R4089:4089 tmpl.puretree <> a:47 var
R4092:4102 tmpl.puretree <> merge_range def
R4104:4104 tmpl.puretree <> b:48 var
R4106:4106 tmpl.puretree <> c:49 var
R4135:4145 tmpl.puretree <> merge_range def
R4178:4193 tmpl.puretree <> min_number_assoc thm
R4196:4211 tmpl.puretree <> max_number_assoc thm
R4178:4193 tmpl.puretree <> min_number_assoc thm
R4178:4193 tmpl.puretree <> min_number_assoc thm
R4196:4211 tmpl.puretree <> max_number_assoc thm
R4196:4211 tmpl.puretree <> max_number_assoc thm
prf 4240:4249 <> merge_comm
binder 4259:4259 <> a:50
binder 4261:4261 <> b:51
R4280:4282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4265:4275 tmpl.puretree <> merge_range def
R4277:4277 tmpl.puretree <> a:50 var
R4279:4279 tmpl.puretree <> b:51 var
R4283:4293 tmpl.puretree <> merge_range def
R4295:4295 tmpl.puretree <> b:51 var
R4297:4297 tmpl.puretree <> a:50 var
R4325:4335 tmpl.puretree <> merge_range def
R4365:4379 tmpl.puretree <> min_number_comm thm
R4382:4396 tmpl.puretree <> max_number_comm thm
R4365:4379 tmpl.puretree <> min_number_comm thm
R4365:4379 tmpl.puretree <> min_number_comm thm
R4382:4396 tmpl.puretree <> max_number_comm thm
R4382:4396 tmpl.puretree <> max_number_comm thm
prf 4425:4432 <> merge_id
binder 4442:4442 <> a:52
R4460:4462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4445:4455 tmpl.puretree <> merge_range def
R4457:4457 tmpl.puretree <> a:52 var
R4459:4459 tmpl.puretree <> a:52 var
R4463:4463 tmpl.puretree <> a:52 var
R4490:4500 tmpl.puretree <> merge_range def
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4557:4564 Coq.ZArith.BinInt Z min_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
R4568:4575 Coq.ZArith.BinInt Z max_id thm
prf 4603:4613 <> merge_again
binder 4623:4623 <> a:53
binder 4625:4625 <> b:54
binder 4627:4627 <> c:55
R4649:4652 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4645:4647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4630:4640 tmpl.puretree <> merge_range def
R4642:4642 tmpl.puretree <> a:53 var
R4644:4644 tmpl.puretree <> b:54 var
R4648:4648 tmpl.puretree <> c:55 var
R4668:4670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4653:4663 tmpl.puretree <> merge_range def
R4665:4665 tmpl.puretree <> a:53 var
R4667:4667 tmpl.puretree <> c:55 var
R4671:4671 tmpl.puretree <> c:55 var
R4717:4727 tmpl.puretree <> merge_range def
R4766:4779 tmpl.puretree <> min_min_number thm
R4766:4779 tmpl.puretree <> min_min_number thm
R4766:4779 tmpl.puretree <> min_min_number thm
R4790:4803 tmpl.puretree <> max_max_number thm
R4790:4803 tmpl.puretree <> max_max_number thm
R4790:4803 tmpl.puretree <> max_max_number thm
prf 4825:4838 <> leq_min_number
binder 4848:4848 <> a:56
binder 4850:4850 <> b:57
R4887:4889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4853:4867 tmpl.puretree <> less_than_equal def
R4870:4879 tmpl.puretree <> min_number def
R4881:4881 tmpl.puretree <> a:56 var
R4883:4883 tmpl.puretree <> b:57 var
R4886:4886 tmpl.puretree <> a:56 var
R4890:4893 Coq.Init.Datatypes <> true constr
R4947:4954 Coq.ZArith.BinInt Z leb_le thm
R4947:4954 Coq.ZArith.BinInt Z leb_le thm
R4947:4954 Coq.ZArith.BinInt Z leb_le thm
R4947:4954 Coq.ZArith.BinInt Z leb_le thm
R4947:4954 Coq.ZArith.BinInt Z leb_le thm
prf 4974:4987 <> leq_max_number
binder 4997:4997 <> a:58
binder 4999:4999 <> b:59
R5036:5038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5002:5016 tmpl.puretree <> less_than_equal def
R5018:5018 tmpl.puretree <> a:58 var
R5021:5030 tmpl.puretree <> max_number def
R5032:5032 tmpl.puretree <> a:58 var
R5034:5034 tmpl.puretree <> b:59 var
R5039:5042 Coq.Init.Datatypes <> true constr
R5096:5103 Coq.ZArith.BinInt Z leb_le thm
R5096:5103 Coq.ZArith.BinInt Z leb_le thm
R5096:5103 Coq.ZArith.BinInt Z leb_le thm
R5096:5103 Coq.ZArith.BinInt Z leb_le thm
R5096:5103 Coq.ZArith.BinInt Z leb_le thm
prf 5123:5138 <> merge_range_incl
binder 5148:5148 <> a:60
binder 5150:5150 <> b:61
binder 5152:5152 <> c:62
R5178:5181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5174:5176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5159:5169 tmpl.puretree <> merge_range def
R5171:5171 tmpl.puretree <> a:60 var
R5173:5173 tmpl.puretree <> b:61 var
R5177:5177 tmpl.puretree <> c:62 var
R5196:5198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5182:5191 tmpl.puretree <> range_incl def
R5193:5193 tmpl.puretree <> a:60 var
R5195:5195 tmpl.puretree <> c:62 var
R5199:5202 Coq.Init.Datatypes <> true constr
R5247:5257 tmpl.puretree <> merge_range def
R5302:5319 Coq.Bool.Bool <> andb_true_iff thm
R5302:5319 Coq.Bool.Bool <> andb_true_iff thm
R5302:5319 Coq.Bool.Bool <> andb_true_iff thm
R5336:5349 tmpl.puretree <> leq_min_number thm
R5359:5372 tmpl.puretree <> leq_max_number thm
R5336:5349 tmpl.puretree <> leq_min_number thm
R5359:5372 tmpl.puretree <> leq_max_number thm
prf 5388:5403 <> range_incl_infty
binder 5415:5415 <> r:63
R5459:5461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5418:5427 tmpl.puretree <> range_incl def
R5429:5429 tmpl.puretree <> r:63 var
R5431:5431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5444:5445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5458:5458 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5432:5443 tmpl.puretree <> Neg_Infinity constr
R5446:5457 tmpl.puretree <> Pos_Infinity constr
R5462:5465 Coq.Init.Datatypes <> true constr
prf 5583:5596 <> merge_infinity
binder 5607:5607 <> r:64
R5652:5654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5610:5620 tmpl.puretree <> merge_range def
R5622:5622 tmpl.puretree <> r:64 var
R5624:5624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5637:5638 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5651:5651 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5625:5636 tmpl.puretree <> Neg_Infinity constr
R5639:5650 tmpl.puretree <> Pos_Infinity constr
R5655:5655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5668:5669 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5682:5682 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5656:5667 tmpl.puretree <> Neg_Infinity constr
R5670:5681 tmpl.puretree <> Pos_Infinity constr
R5713:5723 tmpl.puretree <> merge_range def
R5726:5735 tmpl.puretree <> min_number def
R5738:5747 tmpl.puretree <> max_number def
prf 5786:5800 <> leq_min_number1
binder 5810:5810 <> a:65
binder 5812:5812 <> b:66
R5849:5851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5815:5829 tmpl.puretree <> less_than_equal def
R5832:5841 tmpl.puretree <> min_number def
R5843:5843 tmpl.puretree <> a:65 var
R5845:5845 tmpl.puretree <> b:66 var
R5848:5848 tmpl.puretree <> b:66 var
R5852:5855 Coq.Init.Datatypes <> true constr
R5909:5916 Coq.ZArith.BinInt Z leb_le thm
R5909:5916 Coq.ZArith.BinInt Z leb_le thm
R5909:5916 Coq.ZArith.BinInt Z leb_le thm
R5909:5916 Coq.ZArith.BinInt Z leb_le thm
R5909:5916 Coq.ZArith.BinInt Z leb_le thm
prf 5936:5950 <> leq_max_number1
binder 5960:5960 <> a:67
binder 5962:5962 <> b:68
R5999:6001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5965:5979 tmpl.puretree <> less_than_equal def
R5981:5981 tmpl.puretree <> b:68 var
R5984:5993 tmpl.puretree <> max_number def
R5995:5995 tmpl.puretree <> a:67 var
R5997:5997 tmpl.puretree <> b:68 var
R6002:6005 Coq.Init.Datatypes <> true constr
R6059:6066 Coq.ZArith.BinInt Z leb_le thm
R6059:6066 Coq.ZArith.BinInt Z leb_le thm
R6059:6066 Coq.ZArith.BinInt Z leb_le thm
R6059:6066 Coq.ZArith.BinInt Z leb_le thm
R6059:6066 Coq.ZArith.BinInt Z leb_le thm
prf 6086:6106 <> leq_entail_min_number
binder 6116:6116 <> a:69
binder 6118:6118 <> b:70
R6147:6150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6140:6142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6121:6135 tmpl.puretree <> less_than_equal def
R6137:6137 tmpl.puretree <> a:69 var
R6139:6139 tmpl.puretree <> b:70 var
R6143:6146 Coq.Init.Datatypes <> true constr
R6152:6154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6151:6151 tmpl.puretree <> a:69 var
R6155:6164 tmpl.puretree <> min_number def
R6166:6166 tmpl.puretree <> a:69 var
R6168:6168 tmpl.puretree <> b:70 var
R6231:6238 Coq.ZArith.BinInt Z leb_le thm
R6231:6238 Coq.ZArith.BinInt Z leb_le thm
R6255:6261 Coq.ZArith.BinInt Z min_l thm
R6255:6261 Coq.ZArith.BinInt Z min_l thm
R6255:6261 Coq.ZArith.BinInt Z min_l thm
R6255:6261 Coq.ZArith.BinInt Z min_l thm
prf 6330:6350 <> leq_entail_max_number
binder 6360:6360 <> a:71
binder 6362:6362 <> b:72
R6391:6394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6384:6386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6365:6379 tmpl.puretree <> less_than_equal def
R6381:6381 tmpl.puretree <> b:72 var
R6383:6383 tmpl.puretree <> a:71 var
R6387:6390 Coq.Init.Datatypes <> true constr
R6396:6398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6395:6395 tmpl.puretree <> a:71 var
R6399:6408 tmpl.puretree <> max_number def
R6410:6410 tmpl.puretree <> a:71 var
R6412:6412 tmpl.puretree <> b:72 var
R6475:6482 Coq.ZArith.BinInt Z leb_le thm
R6475:6482 Coq.ZArith.BinInt Z leb_le thm
R6499:6505 Coq.ZArith.BinInt Z max_l thm
R6499:6505 Coq.ZArith.BinInt Z max_l thm
R6499:6505 Coq.ZArith.BinInt Z max_l thm
R6499:6505 Coq.ZArith.BinInt Z max_l thm
prf 6574:6590 <> merge_range_incl'
binder 6601:6601 <> a:73
binder 6603:6603 <> b:74
R6627:6630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6620:6622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6606:6615 tmpl.puretree <> range_incl def
R6617:6617 tmpl.puretree <> a:73 var
R6619:6619 tmpl.puretree <> b:74 var
R6623:6626 Coq.Init.Datatypes <> true constr
R6646:6648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6631:6641 tmpl.puretree <> merge_range def
R6643:6643 tmpl.puretree <> a:73 var
R6645:6645 tmpl.puretree <> b:74 var
R6649:6649 tmpl.puretree <> b:74 var
R6704:6721 Coq.Bool.Bool <> andb_true_iff thm
R6704:6721 Coq.Bool.Bool <> andb_true_iff thm
R6748:6762 tmpl.puretree <> min_number_comm thm
R6768:6788 tmpl.puretree <> leq_entail_min_number thm
R6748:6762 tmpl.puretree <> min_number_comm thm
R6748:6762 tmpl.puretree <> min_number_comm thm
R6768:6788 tmpl.puretree <> leq_entail_min_number thm
R6768:6788 tmpl.puretree <> leq_entail_min_number thm
R6812:6826 tmpl.puretree <> max_number_comm thm
R6832:6852 tmpl.puretree <> leq_entail_max_number thm
R6812:6826 tmpl.puretree <> max_number_comm thm
R6812:6826 tmpl.puretree <> max_number_comm thm
R6832:6852 tmpl.puretree <> leq_entail_max_number thm
R6832:6852 tmpl.puretree <> leq_entail_max_number thm
prf 6881:6901 <> less_than_equal_trans
binder 6912:6912 <> a:75
binder 6914:6914 <> b:76
binder 6916:6916 <> c:77
R6945:6948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6938:6940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6919:6933 tmpl.puretree <> less_than_equal def
R6935:6935 tmpl.puretree <> a:75 var
R6937:6937 tmpl.puretree <> b:76 var
R6941:6944 Coq.Init.Datatypes <> true constr
R6975:6978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6968:6970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6949:6963 tmpl.puretree <> less_than_equal def
R6965:6965 tmpl.puretree <> b:76 var
R6967:6967 tmpl.puretree <> c:77 var
R6971:6974 Coq.Init.Datatypes <> true constr
R6998:7000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6979:6993 tmpl.puretree <> less_than_equal def
R6995:6995 tmpl.puretree <> a:75 var
R6997:6997 tmpl.puretree <> c:77 var
R7001:7004 Coq.Init.Datatypes <> true constr
prf 7082:7097 <> range_incl_trans
binder 7108:7108 <> a:78
binder 7110:7110 <> b:79
binder 7112:7112 <> c:80
R7136:7139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7129:7131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7115:7124 tmpl.puretree <> range_incl def
R7126:7126 tmpl.puretree <> a:78 var
R7128:7128 tmpl.puretree <> b:79 var
R7132:7135 Coq.Init.Datatypes <> true constr
R7161:7164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7154:7156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7140:7149 tmpl.puretree <> range_incl def
R7151:7151 tmpl.puretree <> b:79 var
R7153:7153 tmpl.puretree <> c:80 var
R7157:7160 Coq.Init.Datatypes <> true constr
R7179:7181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7165:7174 tmpl.puretree <> range_incl def
R7176:7176 tmpl.puretree <> a:78 var
R7178:7178 tmpl.puretree <> c:80 var
R7182:7185 Coq.Init.Datatypes <> true constr
R7248:7265 Coq.Bool.Bool <> andb_true_iff thm
R7248:7265 Coq.Bool.Bool <> andb_true_iff thm
R7248:7265 Coq.Bool.Bool <> andb_true_iff thm
R7305:7325 tmpl.puretree <> less_than_equal_trans thm
R7305:7325 tmpl.puretree <> less_than_equal_trans thm
R7305:7325 tmpl.puretree <> less_than_equal_trans thm
prf 7347:7377 <> less_than_equal_less_than_trans
binder 7387:7387 <> a:81
binder 7389:7389 <> b:82
binder 7391:7391 <> c:83
R7420:7424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7413:7415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7394:7408 tmpl.puretree <> less_than_equal def
R7410:7410 tmpl.puretree <> a:81 var
R7412:7412 tmpl.puretree <> b:82 var
R7416:7419 Coq.Init.Datatypes <> true constr
R7445:7448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7438:7440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7425:7433 tmpl.puretree <> less_than def
R7435:7435 tmpl.puretree <> b:82 var
R7437:7437 tmpl.puretree <> c:83 var
R7441:7444 Coq.Init.Datatypes <> true constr
R7462:7464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7449:7457 tmpl.puretree <> less_than def
R7459:7459 tmpl.puretree <> a:81 var
R7461:7461 tmpl.puretree <> c:83 var
R7465:7468 Coq.Init.Datatypes <> true constr
prf 7547:7577 <> less_than_less_than_equal_trans
binder 7587:7587 <> a:84
binder 7589:7589 <> b:85
binder 7591:7591 <> c:86
R7618:7621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7611:7613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7598:7606 tmpl.puretree <> less_than def
R7608:7608 tmpl.puretree <> a:84 var
R7610:7610 tmpl.puretree <> b:85 var
R7614:7617 Coq.Init.Datatypes <> true constr
R7648:7651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7641:7643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7622:7636 tmpl.puretree <> less_than_equal def
R7638:7638 tmpl.puretree <> b:85 var
R7640:7640 tmpl.puretree <> c:86 var
R7644:7647 Coq.Init.Datatypes <> true constr
R7665:7667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7652:7660 tmpl.puretree <> less_than def
R7662:7662 tmpl.puretree <> a:84 var
R7664:7664 tmpl.puretree <> c:86 var
R7668:7671 Coq.Init.Datatypes <> true constr
prf 7750:7765 <> less_than_irrefl
binder 7775:7775 <> a:87
R7791:7793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7778:7786 tmpl.puretree <> less_than def
R7788:7788 tmpl.puretree <> a:87 var
R7790:7790 tmpl.puretree <> a:87 var
R7794:7798 Coq.Init.Datatypes <> false constr
R7847:7858 Coq.ZArith.BinInt Z ltb_irrefl thm
R7847:7858 Coq.ZArith.BinInt Z ltb_irrefl thm
prf 7873:7887 <> less_than_trans
binder 7897:7897 <> a:88
binder 7899:7899 <> b:89
binder 7901:7901 <> c:90
R7924:7928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7917:7919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7904:7912 tmpl.puretree <> less_than def
R7914:7914 tmpl.puretree <> a:88 var
R7916:7916 tmpl.puretree <> b:89 var
R7920:7923 Coq.Init.Datatypes <> true constr
R7949:7952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7942:7944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7929:7937 tmpl.puretree <> less_than def
R7939:7939 tmpl.puretree <> b:89 var
R7941:7941 tmpl.puretree <> c:90 var
R7945:7948 Coq.Init.Datatypes <> true constr
R7966:7968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7953:7961 tmpl.puretree <> less_than def
R7963:7963 tmpl.puretree <> a:88 var
R7965:7965 tmpl.puretree <> c:90 var
R7969:7972 Coq.Init.Datatypes <> true constr
prf 8051:8070 <> less_than_equal_refl
binder 8080:8080 <> a:91
R8102:8104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8083:8097 tmpl.puretree <> less_than_equal def
R8099:8099 tmpl.puretree <> a:91 var
R8101:8101 tmpl.puretree <> a:91 var
R8105:8108 Coq.Init.Datatypes <> true constr
prf 8162:8176 <> range_incl_refl
binder 8187:8187 <> r:92
R8204:8206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8190:8199 tmpl.puretree <> range_incl def
R8201:8201 tmpl.puretree <> r:92 var
R8203:8203 tmpl.puretree <> r:92 var
R8207:8210 Coq.Init.Datatypes <> true constr
R8252:8271 tmpl.puretree <> less_than_equal_refl thm
R8252:8271 tmpl.puretree <> less_than_equal_refl thm
R8252:8271 tmpl.puretree <> less_than_equal_refl thm
R8252:8271 tmpl.puretree <> less_than_equal_refl thm
R8252:8271 tmpl.puretree <> less_than_equal_refl thm
prf 8343:8370 <> less_than_to_less_than_equal
binder 8380:8380 <> a:93
binder 8382:8382 <> b:94
R8405:8408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8398:8400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8385:8393 tmpl.puretree <> less_than def
R8395:8395 tmpl.puretree <> a:93 var
R8397:8397 tmpl.puretree <> b:94 var
R8401:8404 Coq.Init.Datatypes <> true constr
R8428:8430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8409:8423 tmpl.puretree <> less_than_equal def
R8425:8425 tmpl.puretree <> a:93 var
R8427:8427 tmpl.puretree <> b:94 var
R8431:8434 Coq.Init.Datatypes <> true constr
prf 8491:8513 <> less_than_equal_antisym
binder 8524:8524 <> a:95
binder 8526:8526 <> b:96
R8555:8558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8548:8550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8529:8543 tmpl.puretree <> less_than_equal def
R8545:8545 tmpl.puretree <> a:95 var
R8547:8547 tmpl.puretree <> b:96 var
R8551:8554 Coq.Init.Datatypes <> true constr
R8585:8588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8578:8580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8559:8573 tmpl.puretree <> less_than_equal def
R8575:8575 tmpl.puretree <> b:96 var
R8577:8577 tmpl.puretree <> a:95 var
R8581:8584 Coq.Init.Datatypes <> true constr
R8590:8592 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8589:8589 tmpl.puretree <> a:95 var
R8593:8593 tmpl.puretree <> b:96 var
prf 8687:8704 <> range_incl_antisym
binder 8715:8715 <> a:97
binder 8717:8717 <> b:98
R8741:8744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8734:8736 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8720:8729 tmpl.puretree <> range_incl def
R8731:8731 tmpl.puretree <> a:97 var
R8733:8733 tmpl.puretree <> b:98 var
R8737:8740 Coq.Init.Datatypes <> true constr
R8766:8769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8759:8761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8745:8754 tmpl.puretree <> range_incl def
R8756:8756 tmpl.puretree <> b:98 var
R8758:8758 tmpl.puretree <> a:97 var
R8762:8765 Coq.Init.Datatypes <> true constr
R8771:8773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8770:8770 tmpl.puretree <> a:97 var
R8774:8774 tmpl.puretree <> b:98 var
R8824:8841 Coq.Bool.Bool <> andb_true_iff thm
R8824:8841 Coq.Bool.Bool <> andb_true_iff thm
R8863:8880 Coq.Bool.Bool <> andb_true_iff thm
R8863:8880 Coq.Bool.Bool <> andb_true_iff thm
R8912:8934 tmpl.puretree <> less_than_equal_antisym thm
R8912:8934 tmpl.puretree <> less_than_equal_antisym thm
R8912:8934 tmpl.puretree <> less_than_equal_antisym thm
prf 8955:8971 <> key_in_range_incl
binder 8982:8982 <> k:99
binder 8984:8984 <> r:100
binder 8986:8987 <> r':101
R9013:9016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9006:9008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8990:9001 tmpl.puretree <> key_in_range def
R9003:9003 tmpl.puretree <> k:99 var
R9005:9005 tmpl.puretree <> r:100 var
R9009:9012 Coq.Init.Datatypes <> true constr
R9039:9042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9032:9034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9017:9026 tmpl.puretree <> range_incl def
R9028:9028 tmpl.puretree <> r:100 var
R9030:9031 tmpl.puretree <> r':101 var
R9035:9038 Coq.Init.Datatypes <> true constr
R9060:9062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9043:9054 tmpl.puretree <> key_in_range def
R9056:9056 tmpl.puretree <> k:99 var
R9058:9059 tmpl.puretree <> r':101 var
R9063:9066 Coq.Init.Datatypes <> true constr
R9085:9096 tmpl.puretree <> key_in_range def
R9099:9108 tmpl.puretree <> range_incl def
R9143:9151 Coq.Init.Datatypes <> andb_prop thm
R9143:9151 Coq.Init.Datatypes <> andb_prop thm
R9173:9181 Coq.Init.Datatypes <> andb_prop thm
R9173:9181 Coq.Init.Datatypes <> andb_prop thm
R9206:9223 Coq.Bool.Bool <> andb_true_iff thm
R9206:9223 Coq.Bool.Bool <> andb_true_iff thm
R9206:9223 Coq.Bool.Bool <> andb_true_iff thm
R9244:9274 tmpl.puretree <> less_than_equal_less_than_trans thm
R9244:9274 tmpl.puretree <> less_than_equal_less_than_trans thm
R9295:9325 tmpl.puretree <> less_than_less_than_equal_trans thm
R9295:9325 tmpl.puretree <> less_than_less_than_equal_trans thm
prf 9347:9360 <> key_in_range_l
binder 9371:9371 <> k:102
binder 9373:9373 <> r:103
R9399:9402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9392:9394 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9376:9387 tmpl.puretree <> key_in_range def
R9389:9389 tmpl.puretree <> k:102 var
R9391:9391 tmpl.puretree <> r:103 var
R9395:9398 Coq.Init.Datatypes <> true constr
R9441:9443 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9403:9412 tmpl.puretree <> range_incl def
R9414:9414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9420:9421 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9438:9438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9415:9417 Coq.Init.Datatypes <> fst def
R9419:9419 tmpl.puretree <> r:103 var
R9422:9435 tmpl.puretree <> Finite_Integer constr
R9437:9437 tmpl.puretree <> k:102 var
R9440:9440 tmpl.puretree <> r:103 var
R9444:9447 Coq.Init.Datatypes <> true constr
R9478:9489 tmpl.puretree <> key_in_range def
R9517:9536 tmpl.puretree <> less_than_equal_refl thm
R9517:9536 tmpl.puretree <> less_than_equal_refl thm
R9517:9536 tmpl.puretree <> less_than_equal_refl thm
R9554:9581 tmpl.puretree <> less_than_to_less_than_equal thm
R9554:9581 tmpl.puretree <> less_than_to_less_than_equal thm
R9592:9600 Coq.Init.Datatypes <> andb_prop thm
R9592:9600 Coq.Init.Datatypes <> andb_prop thm
prf 9636:9649 <> key_in_range_r
binder 9660:9660 <> k:104
binder 9662:9662 <> r:105
R9688:9691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9681:9683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9665:9676 tmpl.puretree <> key_in_range def
R9678:9678 tmpl.puretree <> k:104 var
R9680:9680 tmpl.puretree <> r:105 var
R9684:9687 Coq.Init.Datatypes <> true constr
R9730:9732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9692:9701 tmpl.puretree <> range_incl def
R9703:9703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9720:9721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9727:9727 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9704:9717 tmpl.puretree <> Finite_Integer constr
R9719:9719 tmpl.puretree <> k:104 var
R9722:9724 Coq.Init.Datatypes <> snd def
R9726:9726 tmpl.puretree <> r:105 var
R9729:9729 tmpl.puretree <> r:105 var
R9733:9736 Coq.Init.Datatypes <> true constr
R9767:9778 tmpl.puretree <> key_in_range def
R9806:9825 tmpl.puretree <> less_than_equal_refl thm
R9828:9843 Coq.Bool.Bool <> andb_true_r thm
R9806:9825 tmpl.puretree <> less_than_equal_refl thm
R9806:9825 tmpl.puretree <> less_than_equal_refl thm
R9828:9843 Coq.Bool.Bool <> andb_true_r thm
R9828:9843 Coq.Bool.Bool <> andb_true_r thm
R9854:9881 tmpl.puretree <> less_than_to_less_than_equal thm
R9854:9881 tmpl.puretree <> less_than_to_less_than_equal thm
R9892:9900 Coq.Init.Datatypes <> andb_prop thm
R9892:9900 Coq.Init.Datatypes <> andb_prop thm
R9938:9947 tmpl.puretree <> range_incl def
sec 9979:9983 <> Trees
var 9998:9998 Trees V
var 10019:10025 Trees default
R10028:10028 tmpl.puretree <> Trees.V var
def 10045:10047 <> key
R10052:10052 Coq.Numbers.BinNums <> Z ind
ind 10068:10071 <> tree
constr 10087:10087 <> E
constr 10100:10100 <> T
R10091:10094 tmpl.puretree <> tree:108 ind
R10107:10110 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10103:10106 tmpl.puretree <> tree:108 ind
R10114:10117 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10111:10113 tmpl.puretree <> key def
R10119:10122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10118:10118 tmpl.puretree <> Trees.V var
R10127:10130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10123:10126 tmpl.puretree <> tree:108 ind
R10131:10134 tmpl.puretree <> tree:108 ind
scheme 10068:10071 <> tree_rect
scheme 10068:10071 <> tree_ind
scheme 10068:10071 <> tree_rec
scheme 10068:10071 <> tree_sind
ind 10150:10151 <> In
constr 10185:10190 <> InRoot
constr 10235:10240 <> InLeft
constr 10284:10290 <> InRight
R10158:10160 tmpl.puretree <> key def
binder 10154:10154 <> k:110
R10169:10172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10165:10168 tmpl.puretree <> tree ind
binder 10192:10192 <> l:113
binder 10194:10194 <> r:114
binder 10196:10196 <> x:115
binder 10198:10198 <> v:116
R10202:10202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10208:10212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10204:10206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10203:10203 tmpl.puretree <> k:110 var
R10207:10207 tmpl.puretree <> x:115 var
R10213:10214 tmpl.puretree <> In:111 ind
R10219:10219 tmpl.puretree <> T constr
R10221:10221 tmpl.puretree <> l:113 var
R10223:10223 tmpl.puretree <> x:115 var
R10225:10225 tmpl.puretree <> v:116 var
R10227:10227 tmpl.puretree <> r:114 var
R10216:10216 tmpl.puretree <> k:110 var
binder 10242:10242 <> l:117
binder 10244:10244 <> r:118
binder 10246:10246 <> x:119
binder 10248:10249 <> v':120
R10258:10261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10252:10253 tmpl.puretree <> In:111 ind
R10257:10257 tmpl.puretree <> l:117 var
R10255:10255 tmpl.puretree <> k:110 var
R10262:10263 tmpl.puretree <> In:111 ind
R10268:10268 tmpl.puretree <> T constr
R10270:10270 tmpl.puretree <> l:117 var
R10272:10272 tmpl.puretree <> x:119 var
R10274:10275 tmpl.puretree <> v':120 var
R10277:10277 tmpl.puretree <> r:118 var
R10265:10265 tmpl.puretree <> k:110 var
binder 10292:10292 <> l:121
binder 10294:10294 <> r:122
binder 10296:10296 <> x:123
binder 10298:10299 <> v':124
R10308:10311 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10302:10303 tmpl.puretree <> In:111 ind
R10307:10307 tmpl.puretree <> r:122 var
R10305:10305 tmpl.puretree <> k:110 var
R10312:10313 tmpl.puretree <> In:111 ind
R10318:10318 tmpl.puretree <> T constr
R10320:10320 tmpl.puretree <> l:121 var
R10322:10322 tmpl.puretree <> x:123 var
R10324:10325 tmpl.puretree <> v':124 var
R10327:10327 tmpl.puretree <> r:122 var
R10315:10315 tmpl.puretree <> k:110 var
scheme 10150:10151 <> In_ind
scheme 10150:10151 <> In_sind
def 10345:10346 <> lt
R10352:10355 tmpl.puretree <> tree ind
binder 10349:10349 <> t:125
R10362:10364 tmpl.puretree <> key def
binder 10359:10359 <> k:126
R10381:10383 tmpl.puretree <> key def
binder 10377:10377 <> x:127
R10392:10395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10386:10387 tmpl.puretree <> In ind
R10389:10389 tmpl.puretree <> x:127 var
R10391:10391 tmpl.puretree <> t:125 var
R10397:10399 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R10396:10396 tmpl.puretree <> k:126 var
R10400:10400 tmpl.puretree <> x:127 var
def 10417:10418 <> gt
R10424:10427 tmpl.puretree <> tree ind
binder 10421:10421 <> t:128
R10434:10436 tmpl.puretree <> key def
binder 10431:10431 <> k:129
R10453:10455 tmpl.puretree <> key def
binder 10449:10449 <> x:130
R10464:10467 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10458:10459 tmpl.puretree <> In ind
R10461:10461 tmpl.puretree <> x:130 var
R10463:10463 tmpl.puretree <> t:128 var
R10469:10471 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R10468:10468 tmpl.puretree <> k:129 var
R10472:10472 tmpl.puretree <> x:130 var
ind 10489:10499 <> sorted_tree
constr 10523:10534 <> Sorted_Empty
constr 10556:10566 <> Sorted_Tree
R10507:10510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10503:10506 tmpl.puretree <> tree ind
R10538:10548 tmpl.puretree <> sorted_tree:131 ind
R10550:10550 tmpl.puretree <> E constr
binder 10568:10568 <> x:133
binder 10570:10570 <> v:134
binder 10572:10572 <> l:135
binder 10574:10574 <> r:136
R10591:10594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10578:10588 tmpl.puretree <> sorted_tree:131 ind
R10590:10590 tmpl.puretree <> l:135 var
R10608:10637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10595:10605 tmpl.puretree <> sorted_tree:131 ind
R10607:10607 tmpl.puretree <> r:136 var
R10644:10647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10638:10639 tmpl.puretree <> gt def
R10641:10641 tmpl.puretree <> l:135 var
R10643:10643 tmpl.puretree <> x:133 var
R10654:10657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10648:10649 tmpl.puretree <> lt def
R10651:10651 tmpl.puretree <> r:136 var
R10653:10653 tmpl.puretree <> x:133 var
R10658:10668 tmpl.puretree <> sorted_tree:131 ind
R10671:10671 tmpl.puretree <> T constr
R10673:10673 tmpl.puretree <> l:135 var
R10675:10675 tmpl.puretree <> x:133 var
R10677:10677 tmpl.puretree <> v:134 var
R10679:10679 tmpl.puretree <> r:136 var
scheme 10489:10499 <> sorted_tree_ind
scheme 10489:10499 <> sorted_tree_sind
def 10696:10701 <> lookup
R10707:10709 tmpl.puretree <> key def
binder 10704:10704 <> x:137
R10717:10720 tmpl.puretree <> tree ind
binder 10713:10713 <> t:138
R10725:10725 tmpl.puretree <> Trees.V var
R10740:10740 tmpl.puretree <> t:138 var
R10753:10753 tmpl.puretree <> E constr
R10758:10764 tmpl.puretree <> Trees.default var
R10772:10772 tmpl.puretree <> T constr
R10791:10794 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R10790:10790 tmpl.puretree <> x:137 var
R10844:10847 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R10848:10848 tmpl.puretree <> x:137 var
R10855:10860 tmpl.puretree <> lookup:139 def
R10862:10862 tmpl.puretree <> x:137 var
R10802:10807 tmpl.puretree <> lookup:139 def
R10809:10809 tmpl.puretree <> x:137 var
def 10921:10926 <> insert
R10932:10934 tmpl.puretree <> key def
binder 10929:10929 <> x:141
R10941:10941 tmpl.puretree <> Trees.V var
binder 10938:10938 <> v:142
R10948:10951 tmpl.puretree <> tree ind
binder 10945:10945 <> s:143
R10956:10959 tmpl.puretree <> tree ind
R10974:10974 tmpl.puretree <> s:143 var
R10987:10987 tmpl.puretree <> E constr
R10992:10992 tmpl.puretree <> T constr
R10994:10994 tmpl.puretree <> E constr
R10996:10996 tmpl.puretree <> x:141 var
R10998:10998 tmpl.puretree <> v:142 var
R11000:11000 tmpl.puretree <> E constr
R11008:11008 tmpl.puretree <> T constr
R11027:11030 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R11026:11026 tmpl.puretree <> x:141 var
R11091:11094 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R11095:11095 tmpl.puretree <> x:141 var
R11156:11156 tmpl.puretree <> T constr
R11160:11160 tmpl.puretree <> x:141 var
R11162:11162 tmpl.puretree <> v:142 var
R11102:11102 tmpl.puretree <> T constr
R11112:11117 tmpl.puretree <> insert:144 def
R11121:11121 tmpl.puretree <> v:142 var
R11119:11119 tmpl.puretree <> x:141 var
R11038:11038 tmpl.puretree <> T constr
R11041:11046 tmpl.puretree <> insert:144 def
R11050:11050 tmpl.puretree <> v:142 var
R11048:11048 tmpl.puretree <> x:141 var
def 11187:11199 <> pushdown_left
R11205:11208 tmpl.puretree <> tree ind
binder 11202:11202 <> a:146
R11216:11219 tmpl.puretree <> tree ind
binder 11212:11213 <> bc:147
R11224:11227 tmpl.puretree <> tree ind
R11242:11243 tmpl.puretree <> bc:147 var
R11256:11256 tmpl.puretree <> E constr
R11261:11261 tmpl.puretree <> a:146 var
R11269:11269 tmpl.puretree <> T constr
R11283:11283 tmpl.puretree <> T constr
R11286:11298 tmpl.puretree <> pushdown_left:148 def
R11300:11300 tmpl.puretree <> a:146 var
def 11333:11338 <> delete
R11344:11346 tmpl.puretree <> key def
binder 11341:11341 <> x:150
R11353:11356 tmpl.puretree <> tree ind
binder 11350:11350 <> s:151
R11361:11364 tmpl.puretree <> tree ind
R11379:11379 tmpl.puretree <> s:151 var
R11392:11392 tmpl.puretree <> E constr
R11397:11397 tmpl.puretree <> E constr
R11405:11405 tmpl.puretree <> T constr
R11424:11427 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R11423:11423 tmpl.puretree <> x:150 var
R11486:11489 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R11490:11490 tmpl.puretree <> x:150 var
R11549:11561 tmpl.puretree <> pushdown_left def
R11497:11497 tmpl.puretree <> T constr
R11507:11512 tmpl.puretree <> delete:152 def
R11514:11514 tmpl.puretree <> x:150 var
R11435:11435 tmpl.puretree <> T constr
R11438:11443 tmpl.puretree <> delete:152 def
R11445:11445 tmpl.puretree <> x:150 var
def 11590:11599 <> insert_seq
R11605:11608 Coq.Init.Datatypes <> list ind
R11614:11616 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R11611:11613 tmpl.puretree <> key def
R11617:11617 tmpl.puretree <> Trees.V var
binder 11602:11602 <> s:154
R11626:11629 tmpl.puretree <> tree ind
binder 11622:11623 <> tr:155
R11639:11647 Coq.Lists.List <> fold_left def
R11689:11690 tmpl.puretree <> tr:155 var
R11687:11687 tmpl.puretree <> s:154 var
binder 11654:11654 <> t:156
binder 11656:11656 <> x:157
R11661:11666 tmpl.puretree <> insert def
R11669:11671 Coq.Init.Datatypes <> fst def
R11673:11673 tmpl.puretree <> x:157 var
R11677:11679 Coq.Init.Datatypes <> snd def
R11681:11681 tmpl.puretree <> x:157 var
R11684:11684 tmpl.puretree <> t:156 var
def 11707:11720 <> insert_seq_opt
R11726:11729 Coq.Init.Datatypes <> bool ind
binder 11723:11723 <> b:158
R11736:11736 tmpl.puretree <> Trees.V var
binder 11733:11733 <> v:159
binder 11739:11740 <> l1:160
binder 11742:11743 <> l2:161
R11755:11755 tmpl.puretree <> b:158 var
R11809:11818 tmpl.puretree <> insert_seq def
R11823:11826 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11821:11822 tmpl.puretree <> l1:160 var
R11827:11828 tmpl.puretree <> l2:161 var
R11831:11831 tmpl.puretree <> E constr
R11766:11775 tmpl.puretree <> insert_seq def
R11780:11783 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11778:11779 tmpl.puretree <> l1:160 var
R11790:11793 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11784:11784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11786:11787 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11789:11789 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11788:11788 tmpl.puretree <> v:159 var
R11794:11795 tmpl.puretree <> l2:161 var
R11798:11798 tmpl.puretree <> E constr
prf 11843:11855 <> value_in_tree
binder 11865:11865 <> x:162
binder 11867:11867 <> v:163
binder 11869:11869 <> k:164
R11875:11878 tmpl.puretree <> tree ind
binder 11872:11872 <> t:165
R11907:11910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11888:11889 tmpl.puretree <> In ind
R11891:11891 tmpl.puretree <> k:164 var
R11894:11899 tmpl.puretree <> insert def
R11901:11901 tmpl.puretree <> x:162 var
R11903:11903 tmpl.puretree <> v:163 var
R11905:11905 tmpl.puretree <> t:165 var
R11911:11911 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11917:11921 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11913:11915 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11912:11912 tmpl.puretree <> x:162 var
R11916:11916 tmpl.puretree <> k:164 var
R11922:11923 tmpl.puretree <> In ind
R11925:11925 tmpl.puretree <> k:164 var
R11927:11927 tmpl.puretree <> t:165 var
R12020:12023 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R12020:12023 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R12086:12091 tmpl.puretree <> InRoot constr
R12086:12091 tmpl.puretree <> InRoot constr
R12170:12175 tmpl.puretree <> InLeft constr
R12170:12175 tmpl.puretree <> InLeft constr
R12205:12211 tmpl.puretree <> InRight constr
R12205:12211 tmpl.puretree <> InRight constr
R12238:12241 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R12238:12241 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R12308:12313 tmpl.puretree <> InRoot constr
R12308:12313 tmpl.puretree <> InRoot constr
R12345:12350 tmpl.puretree <> InLeft constr
R12345:12350 tmpl.puretree <> InLeft constr
R12431:12437 tmpl.puretree <> InRight constr
R12431:12437 tmpl.puretree <> InRight constr
R12464:12466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12464:12466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12487:12495 Coq.ZArith.BinInt Z ltb_nlt thm
R12487:12495 Coq.ZArith.BinInt Z ltb_nlt thm
R12513:12521 Coq.ZArith.BinInt Z ltb_nlt thm
R12513:12521 Coq.ZArith.BinInt Z ltb_nlt thm
R12597:12602 tmpl.puretree <> InRoot constr
R12597:12602 tmpl.puretree <> InRoot constr
R12627:12632 tmpl.puretree <> InLeft constr
R12627:12632 tmpl.puretree <> InLeft constr
R12657:12663 tmpl.puretree <> InRight constr
R12657:12663 tmpl.puretree <> InRight constr
prf 12688:12700 <> insert_sorted
binder 12711:12711 <> x:166
binder 12713:12713 <> v:167
R12719:12722 tmpl.puretree <> tree ind
binder 12716:12716 <> t:168
R12745:12748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12732:12742 tmpl.puretree <> sorted_tree ind
R12744:12744 tmpl.puretree <> t:168 var
R12749:12759 tmpl.puretree <> sorted_tree ind
R12762:12767 tmpl.puretree <> insert def
R12769:12769 tmpl.puretree <> x:166 var
R12771:12771 tmpl.puretree <> v:167 var
R12773:12773 tmpl.puretree <> t:168 var
R12830:12840 tmpl.puretree <> Sorted_Tree constr
R12857:12858 tmpl.puretree <> gt def
R12869:12870 tmpl.puretree <> lt def
R12830:12840 tmpl.puretree <> Sorted_Tree constr
R12912:12915 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R12912:12915 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R13039:13040 tmpl.puretree <> gt def
R13057:13069 tmpl.puretree <> value_in_tree thm
R13057:13069 tmpl.puretree <> value_in_tree thm
R13114:13121 Coq.ZArith.BinInt Z ltb_lt thm
R13114:13121 Coq.ZArith.BinInt Z ltb_lt thm
R13180:13181 tmpl.puretree <> lt def
R13237:13240 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R13237:13240 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R13272:13282 tmpl.puretree <> Sorted_Tree constr
R13272:13282 tmpl.puretree <> Sorted_Tree constr
R13388:13389 tmpl.puretree <> gt def
R13446:13447 tmpl.puretree <> lt def
R13464:13476 tmpl.puretree <> value_in_tree thm
R13464:13476 tmpl.puretree <> value_in_tree thm
R13527:13534 Coq.ZArith.BinInt Z ltb_lt thm
R13527:13534 Coq.ZArith.BinInt Z ltb_lt thm
R13612:13614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13612:13614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13636:13644 Coq.ZArith.BinInt Z ltb_nlt thm
R13636:13644 Coq.ZArith.BinInt Z ltb_nlt thm
R13662:13670 Coq.ZArith.BinInt Z ltb_nlt thm
R13662:13670 Coq.ZArith.BinInt Z ltb_nlt thm
R13711:13721 tmpl.puretree <> Sorted_Tree constr
R13711:13721 tmpl.puretree <> Sorted_Tree constr
prf 13766:13782 <> insert_seq_sorted
binder 13792:13792 <> l:169
binder 13794:13795 <> tr:170
R13818:13821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13804:13814 tmpl.puretree <> sorted_tree ind
R13816:13817 tmpl.puretree <> tr:170 var
R13822:13832 tmpl.puretree <> sorted_tree ind
R13835:13844 tmpl.puretree <> insert_seq def
R13846:13846 tmpl.puretree <> l:169 var
R13848:13849 tmpl.puretree <> tr:170 var
R13914:13917 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13930:13933 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13927:13927 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13929:13929 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13914:13917 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13930:13933 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13927:13927 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13929:13929 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13945:13954 tmpl.puretree <> insert_seq def
R13982:13994 Coq.Lists.List <> fold_left_app thm
R13982:13994 Coq.Lists.List <> fold_left_app thm
R13982:13994 Coq.Lists.List <> fold_left_app thm
R14002:14011 tmpl.puretree <> insert_seq def
R14002:14011 tmpl.puretree <> insert_seq def
R14046:14058 tmpl.puretree <> insert_sorted thm
R14046:14058 tmpl.puretree <> insert_sorted thm
prf 14077:14092 <> insert_seq_assoc
binder 14102:14102 <> k:171
binder 14104:14104 <> v:172
binder 14106:14106 <> l:173
R14142:14144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14115:14120 tmpl.puretree <> insert def
R14122:14122 tmpl.puretree <> k:171 var
R14124:14124 tmpl.puretree <> v:172 var
R14127:14136 tmpl.puretree <> insert_seq def
R14138:14138 tmpl.puretree <> l:173 var
R14140:14140 tmpl.puretree <> E constr
R14145:14154 tmpl.puretree <> insert_seq def
R14158:14161 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14157:14157 tmpl.puretree <> l:173 var
R14162:14162 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14169:14169 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14163:14163 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14165:14166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14168:14168 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14164:14164 tmpl.puretree <> k:171 var
R14167:14167 tmpl.puretree <> v:172 var
R14172:14172 tmpl.puretree <> E constr
R14208:14213 tmpl.puretree <> insert def
R14220:14229 tmpl.puretree <> insert_seq def
R14233:14233 tmpl.puretree <> E constr
R14243:14252 tmpl.puretree <> insert_seq def
R14254:14254 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14261:14261 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14255:14255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14257:14258 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14260:14260 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14264:14273 tmpl.puretree <> insert_seq def
R14277:14277 tmpl.puretree <> E constr
R14208:14213 tmpl.puretree <> insert def
R14220:14229 tmpl.puretree <> insert_seq def
R14233:14233 tmpl.puretree <> E constr
R14243:14252 tmpl.puretree <> insert_seq def
R14254:14254 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14261:14261 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14255:14255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14257:14258 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14260:14260 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14264:14273 tmpl.puretree <> insert_seq def
R14277:14277 tmpl.puretree <> E constr
R14293:14302 tmpl.puretree <> insert_seq def
R14320:14332 Coq.Lists.List <> fold_left_app thm
R14320:14332 Coq.Lists.List <> fold_left_app thm
R14320:14332 Coq.Lists.List <> fold_left_app thm
prf 14351:14371 <> insert_seq_opt_sorted
binder 14381:14381 <> b:174
binder 14383:14383 <> v:175
binder 14385:14386 <> l1:176
binder 14388:14389 <> l2:177
R14398:14408 tmpl.puretree <> sorted_tree ind
R14411:14424 tmpl.puretree <> insert_seq_opt def
R14426:14426 tmpl.puretree <> b:174 var
R14428:14428 tmpl.puretree <> v:175 var
R14430:14431 tmpl.puretree <> l1:176 var
R14433:14434 tmpl.puretree <> l2:177 var
R14480:14496 tmpl.puretree <> insert_seq_sorted thm
R14480:14496 tmpl.puretree <> insert_seq_sorted thm
R14480:14496 tmpl.puretree <> insert_seq_sorted thm
prf 14526:14545 <> insert_seq_opt_assoc
R14564:14566 tmpl.puretree <> key def
binder 14560:14560 <> k:178
R14574:14574 tmpl.puretree <> Trees.V var
binder 14570:14570 <> v:179
R14582:14585 Coq.Init.Datatypes <> bool ind
binder 14578:14578 <> b:180
R14594:14594 tmpl.puretree <> Trees.V var
binder 14589:14590 <> v0:181
R14606:14609 Coq.Init.Datatypes <> list ind
R14615:14617 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R14612:14614 tmpl.puretree <> key def
R14618:14618 tmpl.puretree <> Trees.V var
binder 14598:14599 <> l1:182
binder 14601:14602 <> l2:183
R14667:14669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14629:14634 tmpl.puretree <> insert def
R14636:14636 tmpl.puretree <> k:178 var
R14638:14638 tmpl.puretree <> v:179 var
R14641:14654 tmpl.puretree <> insert_seq_opt def
R14656:14656 tmpl.puretree <> b:180 var
R14658:14659 tmpl.puretree <> v0:181 var
R14661:14662 tmpl.puretree <> l1:182 var
R14664:14665 tmpl.puretree <> l2:183 var
R14670:14683 tmpl.puretree <> insert_seq_opt def
R14685:14685 tmpl.puretree <> b:180 var
R14687:14688 tmpl.puretree <> v0:181 var
R14690:14691 tmpl.puretree <> l1:182 var
R14696:14699 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14694:14695 tmpl.puretree <> l2:183 var
R14700:14700 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14707:14707 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14701:14701 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14703:14704 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14706:14706 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14702:14702 tmpl.puretree <> k:178 var
R14705:14705 tmpl.puretree <> v:179 var
R14751:14764 tmpl.puretree <> insert_seq_opt def
R14775:14790 tmpl.puretree <> insert_seq_assoc thm
R14775:14790 tmpl.puretree <> insert_seq_assoc thm
R14775:14790 tmpl.puretree <> insert_seq_assoc thm
R14775:14790 tmpl.puretree <> insert_seq_assoc thm
R14775:14790 tmpl.puretree <> insert_seq_assoc thm
R14819:14827 Coq.Lists.List <> app_assoc thm
R14819:14827 Coq.Lists.List <> app_assoc thm
R14819:14827 Coq.Lists.List <> app_assoc thm
R14865:14873 Coq.Lists.List <> app_assoc thm
R14865:14873 Coq.Lists.List <> app_assoc thm
R14865:14873 Coq.Lists.List <> app_assoc thm
prf 14898:14913 <> pushdown_left_In
R14931:14934 tmpl.puretree <> tree ind
binder 14924:14925 <> t1:184
binder 14927:14928 <> t2:185
R14941:14943 tmpl.puretree <> key def
binder 14938:14938 <> x:186
R14979:14982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14953:14954 tmpl.puretree <> In ind
R14956:14956 tmpl.puretree <> x:186 var
R14959:14971 tmpl.puretree <> pushdown_left def
R14973:14974 tmpl.puretree <> t1:184 var
R14976:14977 tmpl.puretree <> t2:185 var
R14990:14993 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R14983:14984 tmpl.puretree <> In ind
R14986:14986 tmpl.puretree <> x:186 var
R14988:14989 tmpl.puretree <> t1:184 var
R14994:14995 tmpl.puretree <> In ind
R14997:14997 tmpl.puretree <> x:186 var
R14999:15000 tmpl.puretree <> t2:185 var
R15120:15125 tmpl.puretree <> InRoot constr
R15120:15125 tmpl.puretree <> InRoot constr
R15199:15204 tmpl.puretree <> InLeft constr
R15199:15204 tmpl.puretree <> InLeft constr
R15230:15236 tmpl.puretree <> InRight constr
R15230:15236 tmpl.puretree <> InRight constr
prf 15255:15263 <> delete_In
R15277:15279 tmpl.puretree <> key def
binder 15274:15274 <> x:187
R15286:15289 tmpl.puretree <> tree ind
binder 15283:15283 <> t:188
R15296:15298 tmpl.puretree <> key def
binder 15293:15293 <> y:189
R15319:15322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15302:15303 tmpl.puretree <> In ind
R15305:15305 tmpl.puretree <> y:189 var
R15308:15313 tmpl.puretree <> delete def
R15315:15315 tmpl.puretree <> x:187 var
R15317:15317 tmpl.puretree <> t:188 var
R15323:15324 tmpl.puretree <> In ind
R15326:15326 tmpl.puretree <> y:189 var
R15328:15328 tmpl.puretree <> t:188 var
R15414:15417 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R15414:15417 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R15516:15522 tmpl.puretree <> InRight constr
R15494:15499 tmpl.puretree <> InRoot constr
R15472:15477 tmpl.puretree <> InLeft constr
R15472:15477 tmpl.puretree <> InLeft constr
R15494:15499 tmpl.puretree <> InRoot constr
R15472:15477 tmpl.puretree <> InLeft constr
R15494:15499 tmpl.puretree <> InRoot constr
R15516:15522 tmpl.puretree <> InRight constr
R15472:15477 tmpl.puretree <> InLeft constr
R15494:15499 tmpl.puretree <> InRoot constr
R15516:15522 tmpl.puretree <> InRight constr
R15561:15566 tmpl.puretree <> InLeft constr
R15561:15566 tmpl.puretree <> InLeft constr
R15586:15589 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R15586:15589 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R15692:15698 tmpl.puretree <> InRight constr
R15670:15675 tmpl.puretree <> InRoot constr
R15648:15653 tmpl.puretree <> InLeft constr
R15648:15653 tmpl.puretree <> InLeft constr
R15670:15675 tmpl.puretree <> InRoot constr
R15648:15653 tmpl.puretree <> InLeft constr
R15648:15653 tmpl.puretree <> InLeft constr
R15670:15675 tmpl.puretree <> InRoot constr
R15692:15698 tmpl.puretree <> InRight constr
R15739:15745 tmpl.puretree <> InRight constr
R15739:15745 tmpl.puretree <> InRight constr
R15762:15777 tmpl.puretree <> pushdown_left_In thm
R15762:15777 tmpl.puretree <> pushdown_left_In thm
R15804:15809 tmpl.puretree <> InLeft constr
R15819:15825 tmpl.puretree <> InRight constr
R15804:15809 tmpl.puretree <> InLeft constr
R15819:15825 tmpl.puretree <> InRight constr
prf 15851:15870 <> pushdown_left_sorted
R15888:15891 tmpl.puretree <> tree ind
binder 15881:15882 <> t1:190
binder 15884:15885 <> t2:191
R15915:15918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15901:15911 tmpl.puretree <> sorted_tree ind
R15913:15914 tmpl.puretree <> t1:190 var
R15933:15936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15919:15929 tmpl.puretree <> sorted_tree ind
R15931:15932 tmpl.puretree <> t2:191 var
R15937:15937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15977:15987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 15945:15945 <> x:192
binder 15947:15947 <> y:193
R15957:15960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15950:15951 tmpl.puretree <> In ind
R15953:15953 tmpl.puretree <> x:192 var
R15955:15956 tmpl.puretree <> t1:190 var
R15968:15971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15961:15962 tmpl.puretree <> In ind
R15964:15964 tmpl.puretree <> y:193 var
R15966:15967 tmpl.puretree <> t2:191 var
R15973:15975 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R15972:15972 tmpl.puretree <> x:192 var
R15976:15976 tmpl.puretree <> y:193 var
R15988:15998 tmpl.puretree <> sorted_tree ind
R16001:16013 tmpl.puretree <> pushdown_left def
R16015:16016 tmpl.puretree <> t1:190 var
R16018:16019 tmpl.puretree <> t2:191 var
R16211:16216 tmpl.puretree <> InLeft constr
R16211:16216 tmpl.puretree <> InLeft constr
R16243:16258 tmpl.puretree <> pushdown_left_In thm
R16243:16258 tmpl.puretree <> pushdown_left_In thm
R16294:16300 Coq.ZArith.BinInt Z lt_gt thm
R16294:16300 Coq.ZArith.BinInt Z lt_gt thm
R16323:16328 tmpl.puretree <> InRoot constr
R16323:16328 tmpl.puretree <> InRoot constr
prf 16381:16393 <> delete_sorted
R16407:16409 tmpl.puretree <> key def
binder 16404:16404 <> x:194
R16416:16419 tmpl.puretree <> tree ind
binder 16413:16413 <> t:195
R16442:16445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16429:16439 tmpl.puretree <> sorted_tree ind
R16441:16441 tmpl.puretree <> t:195 var
R16446:16456 tmpl.puretree <> sorted_tree ind
R16459:16464 tmpl.puretree <> delete def
R16466:16466 tmpl.puretree <> x:194 var
R16468:16468 tmpl.puretree <> t:195 var
R16574:16577 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R16574:16577 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R16601:16608 Coq.ZArith.BinInt Z ltb_lt thm
R16601:16608 Coq.ZArith.BinInt Z ltb_lt thm
R16662:16670 tmpl.puretree <> delete_In thm
R16662:16670 tmpl.puretree <> delete_In thm
R16705:16712 Coq.ZArith.BinInt Z ltb_ge thm
R16705:16712 Coq.ZArith.BinInt Z ltb_ge thm
R16734:16737 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R16734:16737 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R16763:16770 Coq.ZArith.BinInt Z ltb_lt thm
R16763:16770 Coq.ZArith.BinInt Z ltb_lt thm
R16827:16835 tmpl.puretree <> delete_In thm
R16827:16835 tmpl.puretree <> delete_In thm
R16872:16891 tmpl.puretree <> pushdown_left_sorted thm
R16872:16891 tmpl.puretree <> pushdown_left_sorted thm
R16973:16977 tmpl.puretree Trees <> sec
R16991:16991 tmpl.puretree <> E constr
R16991:16991 tmpl.puretree <> E constr
R17008:17008 tmpl.puretree <> T constr
R17008:17008 tmpl.puretree <> T constr
R17025:17035 tmpl.puretree <> sorted_tree ind
R17025:17035 tmpl.puretree <> sorted_tree ind
R17052:17057 tmpl.puretree <> lookup def
R17052:17057 tmpl.puretree <> lookup def
R17074:17079 tmpl.puretree <> insert def
R17074:17079 tmpl.puretree <> insert def
R17096:17108 tmpl.puretree <> pushdown_left def
R17096:17108 tmpl.puretree <> pushdown_left def
R17125:17130 tmpl.puretree <> delete def
R17125:17130 tmpl.puretree <> delete def
R17147:17160 tmpl.puretree <> insert_seq_opt def
R17147:17160 tmpl.puretree <> insert_seq_opt def
